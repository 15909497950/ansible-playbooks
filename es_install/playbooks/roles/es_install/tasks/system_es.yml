---

#- name: check /data mount point
#  command: mountpoint -q /data
#  register: volume_stat
#  failed_when: volume_stat.rc != 0
#  changed_when: False
#  tags: init

- name: set hostname
  hostname: name={{ node_name }} use=systemd
  tags: set_hostname

- name: add hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '{{ hostvars[item].ansible_host }} '
    line: '{{ hostvars[item].ansible_host }}    {{ hostvars[item].node_name }}'
  with_items: "{{ groups[group_names[0]] }}"
  tags: add_hosts

- name: stop and disable iptables
  systemd: name=firewalld state=stopped enabled=no

- name: disable selinux
  selinux: state=disabled

- name: set sysctl
  sysctl:
    name: vm.swappiness
    value: 0
    sysctl_set: yes
    reload: yes

- name: set sysctl
  sysctl:
    name: vm.max_map_count
    value: 655360
    sysctl_set: yes
    reload: yes

- name: set limits
  pam_limits:
    dest: /etc/security/limits.conf
    domain: '{{ item.domain }}'
    limit_type: "{{ item.limit_type }}"
    limit_item: "{{ item.limit_item }}"
    value: "{{ item.value }}"
  with_items:
    - { domain: '{{ es_user }}', limit_type: 'soft', limit_item: 'memlock', value: 'unlimited' }
    - { domain: '{{ es_user }}', limit_type: 'hard', limit_item: 'memlock', value: 'unlimited' }
    - { domain: '*', limit_type: 'soft', limit_item: 'nofile', value: '65536' }
    - { domain: '*', limit_type: 'hard', limit_item: 'nofile', value: '65536' }
